using './akswithapp.bicep'

param kubeConfig = 'apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRRExGZGorcGVHTkRuSjQ0TTdDc0s4ekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TkRBME1Ua3lNelF5TlROYUdBOHlNRFUwTURReE9USXpOVEkxTTFvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURkCmcyREtZdE4zMS9VS3hLY2JxWllXOXNDNDN5c1UxQ0p1Z1Qrb2RzWnNhbTkxWnVOZUwwRWFxRVpZdVVJam9sa1UKVkhaVjRyS2V5UXM3THFMZkFrTXlQaHdSWWh2aEMrYU81QmJLL1FwSFNIQkZ6N282clpURjRiN0ZOcEhQOHh4UgpGb1VNbEJ0TnpsWWU1ZWNoMFA1ZW5jTlhzVFpaOUhKQVhPRnZ6MHVSUUFieDhzUDJkNzAzWEhQV2ZoUkZVS1NQClZiSTRLUENHUm01enA0cENCWFFMQmUydjNYOC9UUzhiYmRkVU9IZ25uWjY3R0w5S2lPSjQxak44cjNTTk1pVXoKaFUvQlljR3RwWWs0MUdFRy9IQ3N4bzdNaHdHUDF4WTc0WTJSZHhyWGZscGJBR2gwdWtjOXlOM2xiWlJyUXJVagpGRmJrdU1yQ0pPL0FxQ01PSks4VFh3RmdjK0ZPK3BFUU95QlR5Vi8wRnE4aVc2R1BBYWhXQlRlbVJqQ0k2cWtmCkZscEJNRjVMWG1pTEc1dUQ5RVd5TnJ4cEdkeks1Uk1Rd1EvNXI0Q0kyRDdrQzl6TVVFK2VsNnVVa2I2bjNPMHYKZUdpdE5CelZoeTNESE13RWdKRWJ0VzNjd0JBdmR4bWw2RjJUaEtVUlUxMWM0WjdSQlZzM0JSY1E0aytvSWU5NwpSVWIvTlRMRGlQMThGdVpTK21Kb1huQjFDeVJ0aFU3dEdzZHpWd3RYSjdLV0djYnlUQVlvWURWSGJ5UUY0cklDCi9oWXY4N0VXalNZdXlxQ29xMCtqdDMwSmM5QVFEOERmc0NpTDV2ZWF2OW5pbk14KzlPdEVUVkZUNzdPKzVqdmoKcE1ZeTExTjVBZlhGbzBEYnJaRE1XeHp5UTRnOXV2Mm1yT0ljSzJpMHlRSURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVqSW03ODZjT2JyTkhJT2VGCkRSekJUQlFQTUdzd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFMc3VBUjJpTWQzYTJ2SEEySnV3SWFydWJ6bUIKRTVQaDB5WmNBZjk2dXRpZk9pdjBZdUpCVmZHOUl1dkpPQnVEZHNJYmIzcDdmMU5BOGx5KzRYV2g4VTRYOHQycApnTEUybVMvV1oxTWZxa0tPUElnVGk1Nm5pN2JKVFhqdTZoZTVuTmxFVDdwL3hiY0FTaHY3U2FaT2lTOXg5djdVClFsR1FHR1pUbm1BQnlUYjJRZlkvNHE0bHg3MjM0QVh2TzdOcW1FY29sVDZFQ1RLanh3a2VVODJ2SVVtaldHbnEKb2JueXdPdFc0ViszcldUR1NUZ3IzNUV4Yy9wQ2VIMGIwMHYvcUk5dGg3Zk1zd0xSM0F6OURVNjVlbUhrVmFacwpscHJ2M2N6QkdHcFhIa21iZjJjaWNOVXl6Skx0dVAweVVmRFRSMlYwajNlL3NNTm0zUnF0eHVRdk9wajlsdklsClF5bHVLTXo0ZnluTGQycUpSYk4zbnBOZlhqSUpKdlFQdTYzU0hxZVFnYnhCQlRQUEhGV1ZmWjY0OEMvYkplYXoKQVhZcmRsTkFvSGNYZlNYRkpLSGNGS2xYb25vVDdYTGI2MzlsRDBDdXA5WWpmcTRGRTR1cFdNb1BQeUI0Mk5pawpoSEcwbDNmMmNtQS9YWUNxMVQ0NE5tM2FCZzFnZHVjOVZmVGMxREdoMlRMeVpONm51STY2dGpGVFBFbXdwTDRNCm5wWGs1R2Z5STRCNGtxTEUwRU9vVDN2Rys4MXJrVzZWbk41SitZTVUrQWxHS002bUZQejhIa1hxOWxsWXZ5d0MKL0EvUVY4cko4Rjk3MlorQmEvSDM1UndzeTVKZGlWbWpDUnExWWozZGJ5N1FZNEphck9DRFY4bjZJUTRVa3NOQwoydGcwZEpleTMvTkEzSlZVCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://aks-demo-5y60cwyo.hcp.australiaeast.azmk8s.io:443
  name: aks-demo
contexts:
- context:
    cluster: aks-demo
    user: clusterAdmin_aks-demo-rg_aks-demo
  name: aks-demo-admin
- context:
    cluster: aks-demo
    user: clusterUser_aks-demo-rg_aks-demo
  name: aks-demo
current-context: aks-demo
kind: Config
preferences: {}
users:
- name: clusterAdmin_aks-demo-rg_aks-demo
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIakNDQXdhZ0F3SUJBZ0lSQUpVdk45SXYzSlhKMzlkOWQ3eSs1cEV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05ERTVNakl5TXpRM1doY05Nall3TkRFNU1qSXpNelEzV2pBdwpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVZNQk1HQTFVRUF4TU1iV0Z6ZEdWeVkyeHBaVzUwCk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBc2Jkc1o2VVNRcktzcG5qY0o5ZzUKdm93V3Zzalp6R3FDSDYrdThHUFkwOGJDaFhIZ2Fla1A0RkVkYlI2aG5qc2NpM2RpWkFCY0JUbjdEd1RKUGJOeQp6M3VpOTFWZFhRd0VqSFcrWkVQWnd0Skw5RXR3a0t4dTJQSHNsKzhha1p6bnRpVE1BKzdpTzF3bFFmUUkzNDBEClJtUGxuQlh1RkdHOWdUc0E0M2NJYjlDSkV4bXMyOU5pTHNYMUF4Nzgva2M4SnFLeGxGYysyWmxvMXIxRUYyeGMKVzJnOGVWak96TUxzS2s0TWZxcFlFbGNNTCt5K1I1Z3lObitDU3FESklWR0JNSVVjWHhCUC80YkdsSkVqU1FlegpGdzRPYktRR2JqMmNYVUEzODdRR2xCbEdINTFDQlRib1J1ejIrdjBaYkhwOTFzeCtOL2dtcEo0YUVoOEp1RFVqCitoOW43NDVjZm0vanpLak1VcmkvWkJXNk4xRFZqMCtGWHRNZkpYakxHaHYrbW1qNGlCTVlIbW5ZYUR3QzRDdTAKRml3VWIrUFpwTUVieWhDL1Z2Y3ppdDBZV0dkaEVES0d6WHBPbjZXL0JQVnZTblgvb3dnNDg1akc1S1pvdDkxVwpXc0IrRjJBZ000U0ZQd0FVd3pZTHFKMGUzWlVZUnhYUDI4dU5Hd3NMWnhpaDVsRElra2t1RURnTkx5TUlzUmRNCmJQYTJWRkV0SHhDVU4vcEx1b05DOVhuTGpzQzkvbXFNR0NnSkFNME16a0tsdzZBVGtmRG95VVBFWnBkMjJsc2QKeGJ5dHF1QW9tdTE1VjlvQmRsaFJwNXE5UEFLTHVONVFQRVpuZXFyQ3hrMzJjY1phR0UvZ1R6aENBMlN4bGhuMgpRd3o3SmZIalkxVU9uWVI4NlBIVjZvVUNBd0VBQWFOV01GUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkCkpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVOGtVVlJoOVEKeisydXZwekRyek16TExKdm4wQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBQ0ovajM1czZqK1VqdTViNHFoTAoxeDBFeWtBUnpkQlJUaTBOd2dnN3k3ZDdScC9SY00vTHNjaEN1NEcxZ3Nsck9rQXFVTmtqQisraFFpaWVDbGVaClBBS0t5cGYwLzJaMTh3OSt0ODZ4eDQrd3IzdU0xWkZ5OTdGcThhSW5zSkZuY0NtZ2tob2k2REI5UUFkTHNPbFgKemZOcGJDbzNVTjJFZUw0SmFJeWlxNC9CVlVLcThlSmVPYUdTNElXTk5sNUJpNlpQK1E1TWE1MWR5Q05vTWdPcgp4RjE5d3pIQVVodFdKaVVRV3BFWkljY1hpY2tEaWtvNnl0SDlYL0RROGlhbW1QRk51MVhKMFlhQ3lnUDBSMCszCnY0Q2FaTG41YUFXZzNVTVd0SVRNd0dIeFVTbi9VcmtkYWJDN3BIS1RHcW9SaTlFWDI1aXJyNEtiQlpqWHZraVcKNVVFVG4zU215S0N3KzM3cjNHaWxrZWljN2FxQkM2Z0crS2YvZHN3Vlp3b3FwQUFid1pzMXZLL1hvTGExbUdaSAo4dk1yM25pU1A1ZUZUY2xmcTJrYm5KNjltMTR2ZzFodnhLK280RS9uR3c3d3pnS0dBU2VONFZjSVVYTEhaNmp6CkJRZXlFZXorbnkyZnVqTjlaSVh3Q3VUM2hlZUVMQ3dkaGxQMnplMzN6NUtpcFQwYmlYcWh3RGdQSTA0aXdOWFgKWE50L0xtTVVSM3RlR2dRUm5ad0ZxM09PT0lqRlZKbkJXaVYrMWkvMDdzYVh0dkZTQkRxaVV6dmZZUGZHL0VOegp4UHdaVkdLK2h1TmVIcjFCckE4YTFaZzFOMjB4cEtqWnNCbGtrSVdEUitYR3gwRVJTWnBCMjYxUFpVQnVWQmo5CkhGUGliczBTOUJTUVFEYndoamhVRXVLdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBc2Jkc1o2VVNRcktzcG5qY0o5ZzV2b3dXdnNqWnpHcUNINit1OEdQWTA4YkNoWEhnCmFla1A0RkVkYlI2aG5qc2NpM2RpWkFCY0JUbjdEd1RKUGJOeXozdWk5MVZkWFF3RWpIVytaRVBad3RKTDlFdHcKa0t4dTJQSHNsKzhha1p6bnRpVE1BKzdpTzF3bFFmUUkzNDBEUm1QbG5CWHVGR0c5Z1RzQTQzY0liOUNKRXhtcwoyOU5pTHNYMUF4Nzgva2M4SnFLeGxGYysyWmxvMXIxRUYyeGNXMmc4ZVZqT3pNTHNLazRNZnFwWUVsY01MK3krClI1Z3lObitDU3FESklWR0JNSVVjWHhCUC80YkdsSkVqU1FlekZ3NE9iS1FHYmoyY1hVQTM4N1FHbEJsR0g1MUMKQlRib1J1ejIrdjBaYkhwOTFzeCtOL2dtcEo0YUVoOEp1RFVqK2g5bjc0NWNmbS9qektqTVVyaS9aQlc2TjFEVgpqMCtGWHRNZkpYakxHaHYrbW1qNGlCTVlIbW5ZYUR3QzRDdTBGaXdVYitQWnBNRWJ5aEMvVnZjeml0MFlXR2RoCkVES0d6WHBPbjZXL0JQVnZTblgvb3dnNDg1akc1S1pvdDkxV1dzQitGMkFnTTRTRlB3QVV3ellMcUowZTNaVVkKUnhYUDI4dU5Hd3NMWnhpaDVsRElra2t1RURnTkx5TUlzUmRNYlBhMlZGRXRIeENVTi9wTHVvTkM5WG5ManNDOQovbXFNR0NnSkFNME16a0tsdzZBVGtmRG95VVBFWnBkMjJsc2R4Ynl0cXVBb211MTVWOW9CZGxoUnA1cTlQQUtMCnVONVFQRVpuZXFyQ3hrMzJjY1phR0UvZ1R6aENBMlN4bGhuMlF3ejdKZkhqWTFVT25ZUjg2UEhWNm9VQ0F3RUEKQVFLQ0FnRUFvQjk5WERGZUw1eGZkU3NHYWh3bmd5a2p3VWlrL01xbWJiaFViaUg0bG0vS2lvUGRTSEFHcnYxRwoveStQUFV0VFg5SDBZOWZ6RVg1NVY4SGZOR25BTTNQWmxQSmtTZGJ2TGtOVWhYQ2cveW1ONkJJazNTV1FSb1pMCnYyVmZVZjNHeE5XSXdLNTNSamF6RnlheTdBRlpCdzR4THA2UHdldUMzTEoyRFgwTnEvbC8yQ2JWR2NmdStlZkEKNTh2KzlYam5tSVFVYm16aG94dlhXMHh5MG92Kzl4a0hDK3JaZ2FMTE9SN1RvVGtJVzVYMDFDV0NHRzNvS0RSaApCNjZ4S2dVTzJ0SEVpMTdlUllTQTNoR2Jja3l1cjBJcCt2Y2JHQzhJK1BoSXNacnVKbmhUTjE3d3dsUURtd3dkClNHM05mM0VxZXVRTGdaQmorUVMreHI4U2VkZmZqaGhMVDNUQzk1dmVZVjNRaHY0UzJYU0xQakZQdTFQY0JEcUYKNStIcGhyRDJaZzRCRmRwajlRR1FkdzdoUlVZK1AzTmdtSXR0WEo2cDdLNll5c1VXS2hHQW5HVTZINXRZYiszNgpqZkg2aDNRR1BGYW5QQ0lTSHJmaVoxcC9SRlNBdEdEZ2p0UXoxeGVacCt0WHVwQ1BOc1dJdGpxa01hQ3NBd1d4Ckg2V2xFc3kwNEZoZzYxOUVzazdUa1J2NG5LQU1YdzV5dUF3UE1sbXdNSDJoNE1OREdVWXI5TTFwcXJscDhQZGQKcU9hbkp6NDdGSG9uRzNNc0hOQk54TXVDRzJYaVJzY202TDZuSlZmNms3akdBdW4yZ2Z6WEVndFpKdWU0d2xjZQoyNi8vejZjNy9iSzRQUzlIKzJoaWllSmRNYU5pbUFWQ1h4L1BuSlBrRWUxUGFmOGxPYTBDZ2dFQkFOcXdaU2pvCjlvcDBXQzZhTnh4VW9LMUZmZDJQa2tyMkhWYlYrUTVUZFBPajZqSEx5SXpESWR0YXFwWnhTTXNDTGZ6SDRaQUkKRE9HWGliUTRwZlBoeUFiWGYrcEt2UmcrRE1KMkQ3WG0ySTJSS1A2L2ZlV21COWlDT3lLNkZIL0JTTzU0UGtjSAoyUTg2UitwRkozZi90aGFvTk9uQndxbnc4NnE3eTV0ajVnV1I1cFlVWGNka1hnQnFiTitPekZKK3dtWUh4dGNSCkZFTE1hZEdhTURtMUZRTEZaZy9xQjNFU3IrWnNCTXlTOWJDeFhmQjNXU3VLdnZDYzZvZXRoVlljamlPQ3ZWb2UKQ3l3QUFwbWNYUkNJQ2VRTGpFQmZCSGs0TnV0eTNZUExnQ2tMRXRVTlNCSHpQQjloSUNGeUQyNnRIMTBaQlFKbgpHcVpUUC9pV3I3NnFlRzhDZ2dFQkFOQUpmQmtQWFZQc01paDduNitTU29GcFpzczNpa01UQm1qRFZZcklFcEpuCjdzLzNVSzh0S3k1dk5MWlMwOHNheWpVTUxRWWtYM0t2L25HcThUempveW9BVTdKUnNhNXNqSUo1ckkrbEFuNUIKeUVIVDF1YlpQTVZKdmdEN0VDSDBDNXdQaEdoSllwL0d2Zy9aOGI4V2p4Y0t4aDQxOC9yaU1LRk01Y2VRWjBJYQpVU0k1R1VJZlcwS2ltMzFyZEVleWdCUkdVYmt2R0N5MXc5ZHQ5RVlZWFN2SmJkUnV0UHNnb21JL1RNazRwWWhICjhoVDltYnNIZzh2TkV2bWlFU1A0THdlYzU4MkR6TyttaElYbGh2TElLZmRTUmlJOTFBMXFvSVRuWVBnVG0zT0wKQ2ZtRUVHQ1dOQndLQ0tBY21JcVdWVjNvZ0FBL1Nha0Foak81amY1Q2Zrc0NnZ0VBRThxQTdTbmdIZm1YZldneApjcHZxQ3FST1ZyM0doSWd2Y1l0ZHhjRWh4V2JoSys2QVVOVGIvSWtCQlNwdFp3bmtkWXIxUzk2ZW84L2VBM1JZCitIQkhkTzhOd1h0UUQ2Q1Y4UWRVTnFjVWxBTStEWWZ3OGRhTHdUbFA5cjJXVzFWM3J6VXNsYXNOSnNha2VYd1cKclZKei9TcnQxdlhWRXlJZU95WlJyOWRqbXI5d2VjYVFFaHB3TTJOdVJQRWNacDdZSXZtek1nVjJxdkRxNXJBbwppeUJyTFZ3Rjk0eTdiYTArUkFFa2tncit0eVhtRlh3SGt0dzBtWHZwOGF0dmRMS1MzbjNYZXc5YS9YbG13dFlXCnlnYzF0ZkNobWJXL3B1VENlNTVpazZuWUNGN2JMbkxNUWV1Y1ZrNm81TDM0elpCWFZVcU5YSUZPTlIwMW5kNnQKT3ZrY2V3S0NBUUVBcCtuUDZXWTJYUU42NUtRTG1xbUlTM1hvaTBQejYvbVNKY0xyNjQxYk9DSjlaZ3huYWswWgoybXZWN3dkaGZVRE5UdzNaMVdoTVJnUjVhZ09nblJYYlg0NU4vOUxpaURlREhkalppRU9XaEpQUjhCZnREL3p0CmlRdmhPV2RyZVF4Q3hwN2JyMVQwTHFRNlNnOE9pYjdLbGIyVGRWVDA3VjNlQklOTnY4cjFIU3lpcWUzT1RrbUMKM29EaTRkTjJVbHhuOW5WZmh3blZDRmxaaml0b2k1OGtySy96WHhCUU1aWUFteTRlYXhlMnZBM2Qva1ZHN09lKwo0Q05SR241T09Xc2JncGlKbko2eUxnaUlWSTZUWXFoZS93bkFJK2tsbkFLaE4wU09SdzJFWGprdVB0L3lYQk5BClVoVmpLdUNKMnVwR1V2clRQZC9YTTNxQjE0UUFjT1g0aXdLQ0FRQTByMWRKdk9UcjZDbk5zN253ZnNtVjdtMmEKbUYvd2dJUm5zWHlPd3Q5SGJjcnhJeDUrRVR3NzdGN2llZy8wQm1KdEkxd0oyK0gyVU5uL0QvdnJsZzRCMUJTdApVcGx3YUtsaUswc1B2OEhZRXZzWWQ5aUJMb3ZOcExxM3ZRNkxjZ0VjVmlZbkNWZzR1bVV2NDNEOHBWUnZWVkg1CkwvUjBXUmxmSEdka1dTZlN3QUNQZHg1ampUU1FmVW13M3ZuYWxxdHZ5MGhIL29ldVlxK1VFS3ZRSG0rVlBFLzQKN2JsM25zKzdORis5WWZwdDYzUnY4VEtrbFdHK1hBWVhDS0JHOW55dW9LUi8zWE9WSVQ0UmhmOVF2ZlBpTHBXMwpFVE1HTWhxZXNmNk9iRVdwZVUwcWQ5c1gzR1hsU3ZrSlJoZTA1Q0tPb3gxeTczRzR3TXZLY042STRucFIKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    token: s6iouzj9ouogb22t90lq9ngpz0xfyssi18049bzse8ghr95oyd1sfymdt2imm1wdpw66utoggjj0lzoldouph5b5df4xwvhagosyb2eyh17dzc2dtq0xchv4jvsze432
- name: clusterUser_aks-demo-rg_aks-demo
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - get-token
      - --environment
      - AzurePublicCloud
      - --server-id
      - 6dae42f8-4368-4678-94ff-3960e28e3630
      - --client-id
      - 80faf920-1908-4b52-b5ef-a8e7bedfc67a
      - --tenant-id
      - e90a95d2-a587-4523-9260-5c354885caa0
      - --login
      - devicecode
      command: kubelogin
      env: null
      installHint: '

        kubelogin is not installed which is required to connect to AAD enabled cluster.


        To learn more, please go to https://aka.ms/aks/kubelogin

        '
      provideClusterInfo: false
'
